#brute approach
# def ls(arr,x):
#     for i in range(len(arr)):
#         if arr[i]==x:
#             return True
#     return False
# def longest_consecutive(arr):
#     n=len(arr)
#     longest=1
#     for i in range(n):
#         x=arr[i]
#         count=1
#         while(ls(arr,x+1)):
#             x=x+1
#             count+=1
#         if count>longest:
#            longest=count
#     return longest
# if __name__=="__main__":
#     arr=[1,101,2,3,4,5,6,103,102,104]
#     print(longest_consecutive(arr))
#better approach
# def longest_consecutive(arr):
#     n=len(arr)
#     arr.sort()
#     longest=1
#     currcount=0
#     lastsmaller=float('-inf')
#     for i in range(n):
#         if(arr[i]-1==lastsmaller):
#             currcount=currcount+1
#             lastsmaller=arr[i]
#         elif(arr[i]!=lastsmaller):
#             currcount=1
#             lastsmaller=arr[i]
#         longest=max(longest,currcount)
#     return longest
# if __name__=="__main__":
#     arr=[1,101,2,3,4,5,6,102,103,105,104]
#     print(longest_consecutive(arr))
#optimal approach
def longest_consecutive(arr):
    n=len(arr)
    if n==0:
        return 0
    longest=1
    st=set()